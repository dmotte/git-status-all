#!/bin/bash

set -e

# show_help prints the help message
show_help() {
    echo "Usage:"
    echo "    $0 [dir1 [dir2 [...]]]"
    echo "    $0 -h|--help"
    echo "Examples:"
    echo "    $0"
    echo "    $0 /home/user/my-git-repos/"
    echo "    $0 ./private-repos ./public-repos"
}

# status_repo prints the status of a Git repo given its folder's path ($1)
status_repo() {
    echo -n "### $1: "
    git -C "$1" fetch
    git -C "$1" status -bs
}

export -f status_repo

# status_folders prints the status of all repos in the directory trees of the
# folders passed as parameters
status_folders() {
    for dir in "$@"; do
        # For each folder named ".git" in the directory tree, call the
        # status_repo function on the parent (i.e. "${1:0:-5}").
        # The last "bash" string in the -exec command is the zeroth argument
        # ($0) for the Bash subshell. See https://unix.stackexchange.com/a/50695
        find "$dir" -type d -name ".git" \
            -exec bash -c 'status_repo "${1:0:-5}"' bash {} \;
    done
}

if [ $# -eq 0 ]; then
    status_folders "."
else
    if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
        show_help
        exit 0
    else
        status_folders "$@"
    fi
fi
